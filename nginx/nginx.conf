
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    server_tokens off;
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format json_log escape=json '{'
        '"timestamp": "$time_iso8601",'
        '"remote_addr": "$remote_addr",'
        '"remote_user": "$remote_user",'
        '"request_method": "$request_method",'
        '"request_uri": "$request_uri",'
        '"query_string": "$query_string",'
        '"server_protocol": "$server_protocol",'
        '"status": "$status",'
        '"body_bytes_sent": "$body_bytes_sent",'
        '"request_length": "$request_length",'
        '"request_time": "$request_time",'
        '"upstream_addr": "$upstream_addr",'
        '"upstream_status": "$upstream_status",'
        '"upstream_response_time": "$upstream_response_time",'
        '"upstream_connect_time": "$upstream_connect_time",'
        '"http_referer": "$http_referer",'
        '"http_user_agent": "$http_user_agent",'
        '"http_x_forwarded_for": "$http_x_forwarded_for",'
        '"http_x_real_ip": "$http_x_real_ip",'
        '"server_name": "$server_name",'
        '"host": "$host",'
        '"scheme": "$scheme",'
        '"request_id": "$request_id",'
        '"ssl_protocol": "$ssl_protocol",'
        '"ssl_cipher": "$ssl_cipher"'
    '}';

    access_log  /var/log/nginx/access.log  json_log;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;
    # 核心缓冲区配置
    proxy_buffering on;                     # 启用缓冲（默认开启）
    proxy_buffer_size 16k;                  # 单个缓冲区大小（存储响应头）
    proxy_buffers 8 256k;                   # 缓冲区数量与大小（8 个 256KB 缓冲区）
    proxy_busy_buffers_size 512k;           # 忙碌时缓冲区大小
    proxy_max_temp_file_size 0;             # 禁用临时文件写入（激进方案，需谨慎）

    # 其他优化
    proxy_read_timeout 300;                 # 上游响应超时时间
    proxy_send_timeout 300;                 # 发送请求到上游的超时时间

    include /etc/nginx/conf.d/*.conf;
}

stream {
    log_format stream_json escape=json '{'
        '"timestamp": "$time_iso8601",'
        '"log_type": "stream",'
        '"protocol": "$protocol",'
        '"remote_addr": "$remote_addr",'
        '"remote_port": "$remote_port",'
        '"server_addr": "$server_addr",'
        '"server_port": "$server_port",'
        '"proxy_protocol_addr": "$proxy_protocol_addr",'
        '"proxy_protocol_port": "$proxy_protocol_port",'
        '"status": "$status",'
        '"bytes_sent": "$bytes_sent",'
        '"bytes_received": "$bytes_received",'
        '"session_time": "$session_time",'
        '"upstream_addr": "$upstream_addr",'
        '"upstream_bytes_sent": "$upstream_bytes_sent",'
        '"upstream_bytes_received": "$upstream_bytes_received",'
        '"upstream_connect_time": "$upstream_connect_time",'
        '"upstream_session_time": "$upstream_session_time",'
        '"ssl_cipher": "$ssl_cipher",'
        '"ssl_protocol": "$ssl_protocol",'
        '"ssl_session_reused": "$ssl_session_reused"'
    '}';

    include stream.d/*.conf;
    access_log /dev/stdout stream_json;
}
